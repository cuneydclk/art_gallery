# render.yaml
services:
  - type: web
    name: art-gallery-demo # << YOUR UNIQUE APP NAME
    env: python
    region: frankfurt
    plan: free
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py collectstatic --no-input --clear
      python manage.py migrate
    startCommand: gunicorn gallery_config.wsgi:application --workers 2 --threads 2 --timeout 120
    healthCheckPath: /
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.5 # << YOUR PYTHON VERSION
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: False
      # DATABASE_URL will be automatically injected by Render
      # because we are connecting the web service to the database service below.
      # We achieve this by making sure the `fromDatabase.name` in an (optional)
      # explicit DATABASE_URL entry for the web service matches the `name` of the database service,
      # OR Render automatically links services if one is clearly a web app and the other a DB.
      # Let's rely on Render's automatic linking for now, but if issues persist, we'll add it.

  - type: pserv # This still signifies a private service
    name: artgallerydb # Name for your database service within Render
    region: frankfurt
    plan: free
    # Use the 'database' key for explicit database configuration for pserv
    database:
      name: artgallery_dbname # This is the actual database *name* inside PostgreSQL
      engine: postgresql # Specifies the database engine
      # user: artgallery_user # Optional: Render generates a user if not specified
      # version: "15" # Optional: specify PostgreSQL version